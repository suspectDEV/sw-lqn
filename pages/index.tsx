import { useEffect, useState } from "react";
import Head from "next/head";
import { ApolloClient, gql, InMemoryCache } from "@apollo/client";
// import styles from "../styles/Home.module.css";
import { Footer, Main } from "../styles/Home.styles";

// ..Components
import { Subheader } from "../components/subheader";
import PeopleList from "../components/people/list";
import { useRouter } from "next/router";
import CharacterDetails from "../components/character-details";

interface IHome {
  arrPeople: any[];
}

export default function Home({ arrPeople }: IHome) {
  const initialState = arrPeople;
  const [people, setPeople] = useState(initialState);
  const router =  useRouter();
  const chID = ""+router.query.character

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {
        router.query.character&&(
          <CharacterDetails userID={chID} />
        )
      }

      <Subheader />

      <Main>
        <PeopleList arrPeople={initialState} />
      </Main>

      <Footer>
        <a
          href="https://loquenecesito.co"
          target="_blank"
          rel="noopener noreferrer"
        >
          Created for{" "}
          <span className="logo">
            <img
              src="https://loquenecesito.co/assets/images/logolqn.4d46720645d4c88104a73e0dca6f421d.png"
              alt="LQN logo"
              height={16}
            />
          </span>
        </a>
      </Footer>
    </div>
  );
}

export async function getStaticProps() {
  const client = new ApolloClient({
    uri: "https://swapi-graphql.netlify.app/.netlify/functions/index",
    cache: new InMemoryCache(),
  });
  const { data } = await client.query({
    query: gql`
      query {
        allPeople {
          people {
            id
            name
            gender
            species {
              id
              name
            }
            homeworld {
              id
              name
            }
            filmConnection {
              films {
                title
                director
              }
            }
          }
        }
      }
    `,
  });

  return {
    props: {
      arrPeople: data.allPeople.people,
    },
  };
}

// export default Home();
